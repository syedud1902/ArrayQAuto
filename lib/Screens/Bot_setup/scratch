import 'dart:ui';

import 'package:desktop_app/Screens/Dashboard/dashboard_screen.dart';
import 'package:desktop_app/Screens/QuickTask/quicktask_setup.dart';
import 'package:desktop_app/Screens/Scheduler/Scheduler.dart';
import 'package:desktop_app/Screens/Settings/settings.dart';
import 'package:desktop_app/components/bots.dart';
import 'package:desktop_app/components/constants.dart';
import 'package:desktop_app/components/header.dart';
import 'package:desktop_app/components/profile.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import "dart:convert";
import '../../main.dart';

class WhatBotSetUpScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(body: WBMainBody());
  }
}

class WBMainBody extends StatelessWidget {
  WBMainBody({key}) : super(key: key);
  int pageIndex = 0;

  @override
  Widget build(BuildContext context) {
    Size size = MediaQuery.of(context).size;
    return Row(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Container(
          width: 100,
          height: size.height,
          child: Drawer(
            elevation: 0,
            child: SingleChildScrollView(
              child: Container(
                height: size.height,
                decoration: BoxDecoration(
                  color: secondaryColor,
                ),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: [
                    Container(
                      child: Column(
                        children: [
                          Container(
                            height: 100,
                            child: Center(
                              child: Container(
                                height: 80,
                                child: Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Image.asset(
                                    'assests/images/new_logo.png',
                                    height: 70,
                                    width: 70,
                                    filterQuality: FilterQuality.high,
                                  ),
                                ),
                              ),
                            ),
                          ),
                          Container(
                              height: 1,
                              width: size.width / 20,
                              color: Colors.white),
                          SizedBox(height: 20),
                        ],
                      ),
                    ),
                    Container(
                      height: 400,
                      width: double.infinity,
                      child: Column(
                        children: [
                          IconTile(
                            image: 'assests/images/arrow.png',
                            press: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => MyHomePage()),
                              );
                            },
                            selectedIndex: 0,
                            pageIndex: pageIndex,
                          ),
                          SizedBox(height: 25),
                          IconTile(
                            image: 'assests/images/calendar.png',
                            press: () {
                              Navigator.pop(context);
                            },
                            selectedIndex: 1,
                            pageIndex: pageIndex,
                          ),
                          SizedBox(height: 25),
                          IconTile(
                            image: 'assests/images/quicktask.png',
                            press: () {
                              Navigator.pop(context);
                            },
                            selectedIndex: 2,
                            pageIndex: pageIndex,
                          ),
                          SizedBox(height: 25),
                          IconTile(
                            image: 'assests/images/settings.png',
                            press: () {
                              Navigator.pop(context);
                            },
                            selectedIndex: 3,
                            pageIndex: pageIndex,
                          ),
                        ],
                      ),
                    ),
                    Container(
                      height: 60,
                      width: double.infinity,
                      child: SideBottom(),
                    ),
                  ],
                ),
              ),
            ),
          ),
        ),
        Expanded(
          flex: 5,
          child: WB_body(),
        ),
      ],
    );
  }
}

class WB_body extends StatefulWidget {
  @override
  _WB_bodyState createState() => _WB_bodyState();
}

class _WB_bodyState extends State<WB_body> {
  String message = 'N/A....';
  String name = 'Not changed';
  String filename = '';

  @override
  Widget build(BuildContext context) {
    return SafeArea(
      child: Container(
        height: MediaQuery.of(context).size.height,
        decoration: BoxDecoration(
          color: bgColor,
        ),
        child: Stack(
          alignment: Alignment.center,
          children: [
            Center(
              child: Opacity(
                opacity: 1,
                child: Container(
                  height: MediaQuery.of(context).size.height,
                  width: MediaQuery.of(context).size.width,
                  decoration: BoxDecoration(
                    image: DecorationImage(
                      image: AssetImage('assests/images/Desktop - 1.png'),
                      fit: BoxFit.contain,
                    ),
                  ),
                ),
              ),
            ),
            Column(
              children: [
                Padding(
                  padding: const EdgeInsets.only(
                      top: 20, right: 10, left: 10, bottom: 30),
                  child: Header(title: "WhatBot Set Up"),
                ),
                Container(
                  height: 510,
                  width: 1000,
                  decoration: BoxDecoration(
                    color: Colors.transparent,
                    borderRadius: BorderRadius.all(Radius.circular(10)),
                  ),
                  child: Row(
                    children: [
                      Expanded(
                        child: Container(
                          decoration: BoxDecoration(
                            color: Colors.transparent,
                            borderRadius: BorderRadius.only(
                                topLeft: Radius.circular(10),
                                bottomLeft: Radius.circular(10)),
                          ),
                          child: Column(
                            children: [
                              Padding(
                                padding: const EdgeInsets.all(8.0),
                                child: Text(
                                  'Setup Local',
                                  style: TextStyle(
                                    fontSize: 25,
                                    fontWeight: FontWeight.w500,
                                    color: Colors.white60,
                                  ),
                                ),
                              ),
                              WebHookField(),
                              WebHookButton(buttonText: 'Start WebHook Setup'),
                              Row(
                                children: [
                                  Container(
                                    margin: EdgeInsets.all(10),
                                    decoration: BoxDecoration(
                                      color: bgColor,
                                      borderRadius:
                                          BorderRadius.all(Radius.circular(10)),
                                      border: Border.all(
                                          width: 1, color: Colors.white12),
                                    ),
                                    width: 230,
                                    height: 50,
                                    child: Center(
                                      child: TextFormField(
                                        onFieldSubmitted: (value) async {
                                          final response = await http.post(
                                              Uri.parse(
                                                  'http://127.0.0.1:5000/WhatBot_data1'),
                                              body: jsonEncode(
                                                  {'pf_groupname': value}));
                                        },
                                        textAlign: TextAlign.center,
                                        decoration: new InputDecoration(
                                            border: InputBorder.none,
                                            hintText:
                                                'Enter Profile Group Name'),
                                      ),
                                    ),
                                  ),
                                  Column(
                                    children: [
                                      Container(
                                        margin:
                                            EdgeInsets.fromLTRB(10, 10, 10, 3),
                                        decoration: BoxDecoration(
                                          color: bgColor,
                                          borderRadius: BorderRadius.all(
                                              Radius.circular(10)),
                                          border: Border.all(
                                              width: 1, color: Colors.white12),
                                        ),
                                        width: 225,
                                        height: 35,
                                        child: Center(
                                          child: ElevatedButton(
                                            style: ElevatedButton.styleFrom(
                                              primary: bgColor,
                                              elevation: 0,
                                            ),
                                            onPressed: () async {
                                              final response = await http.get(
                                                  Uri.parse(
                                                      'http://127.0.0.1:5000/WhatBot_data2'));
                                              print(response);
                                              final decoded =
                                                  jsonDecode(response.body)
                                                      as String;
                                              setState(() {
                                                filename = decoded;
                                              });
                                            },
                                            child: Text('Choose Profiles File'),
                                          ),
                                        ),
                                      ),
                                      Container(
                                        margin: EdgeInsets.all(5),
                                        decoration: BoxDecoration(
                                          color: bgColor,
                                          borderRadius: BorderRadius.all(
                                              Radius.circular(10)),
                                          border: Border.all(
                                              width: 1, color: Colors.white12),
                                        ),
                                        width: 225,
                                        height: 35,
                                        child: Center(
                                          child: Text(filename),
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                              SizedBox(height: 120),
                              WhatBotButton(buttonText: 'Full WhatBot Setup'),
                            ],
                          ),
                        ),
                      ),
                      Expanded(
                        child: Container(
                          decoration: BoxDecoration(
                            color: Colors.transparent,
                            borderRadius: BorderRadius.only(
                                topRight: Radius.circular(10),
                                bottomRight: Radius.circular(10)),
                          ),
                          child: Column(
                            children: [
                              Padding(
                                padding: const EdgeInsets.all(8.0),
                                child: Text(
                                  'WhatBot Servers',
                                  style: TextStyle(
                                    fontSize: 25,
                                    fontWeight: FontWeight.w500,
                                    color: Colors.white60,
                                  ),
                                ),
                              ),
                              ServerBotCard(),
                              SizedBox(
                                height: 300,
                              ),
                              WhatBotSCButton(buttonText: 'Schedule Setup')
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

class WebHookField extends StatefulWidget {
  const WebHookField({key}) : super(key: key);

  @override
  _WebHookFieldState createState() => _WebHookFieldState();
}

class _WebHookFieldState extends State<WebHookField> {
  String webhook = profiles[0].webhook;
  @override
  Widget build(BuildContext context) {
    return Container(
      margin: EdgeInsets.all(10),
      decoration: BoxDecoration(
        color: bgColor,
        borderRadius: BorderRadius.all(Radius.circular(10)),
        border: Border.all(width: 1, color: Colors.white12),
      ),
      width: 265,
      height: 50,
      child: Center(
        child: TextFormField(
          onChanged: (value) {
            setState(() {
              webhook = value;
            });
          },
          textAlign: TextAlign.center,
          decoration:
              new InputDecoration(border: InputBorder.none, hintText: webhook),
        ),
      ),
    );
  }
}

class WebHookButton extends StatefulWidget {
  WebHookButton({key, this.buttonText}) : super(key: key);
  final buttonText;
  bool clicked = false;

  @override
  _WebHookButtonState createState() => _WebHookButtonState();
}

class _WebHookButtonState extends State<WebHookButton> {
  String message = 'N/A....';

  @override
  Widget build(BuildContext context) {
    return ElevatedButton(
      style: ElevatedButton.styleFrom(
          primary: bgColor,
          fixedSize: Size(265, 55),
          side: BorderSide(
            width: 1,
            color: Colors.white12,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          )),
      onPressed: () async {
        final response =
            await http.get(Uri.parse('http://127.0.0.1:5000/WhatBot_WH'));
        print(response);
        final decoded = jsonDecode(response.body) as String;
        setState(() {
          message = decoded;
        });
      },
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: defaultPadding),
            child: Text(
              widget.buttonText,
              style: TextStyle(color: Colors.white54),
            ),
          ),
          Icon(
            Icons.chevron_right_rounded,
            color: primaryColor,
          )
        ],
      ),
    );
  }
}

class WhatBotButton extends StatefulWidget {
  WhatBotButton({key, this.buttonText}) : super(key: key);
  final buttonText;
  bool clicked = false;

  @override
  _WhatBotButtonState createState() => _WhatBotButtonState();
}

class _WhatBotButtonState extends State<WhatBotButton> {
  String message = 'Status: ';

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        ElevatedButton(
          style: ElevatedButton.styleFrom(
              primary: secondaryColor,
              fixedSize: Size(265, 55),
              side: BorderSide(
                width: 1,
                color: primaryColor,
              ),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(10),
              )),
          onPressed: () async {
            final response =
                await http.get(Uri.parse('http://127.0.0.1:5000/WhatBotMain'));
            print(response);
            final decoded = jsonDecode(response.body) as String;
            setState(() {
              message = decoded;
            });
          },
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: defaultPadding),
                child: Text(
                  widget.buttonText,
                  style: TextStyle(color: primaryColor.withOpacity(0.8)),
                ),
              ),
              Icon(
                Icons.chevron_right_rounded,
                color: primaryColor,
              )
            ],
          ),
        ),
        Container(
          margin: EdgeInsets.all(10),
          decoration: BoxDecoration(
            color: Colors.transparent,
            borderRadius: BorderRadius.all(Radius.circular(10)),
            border: Border.all(width: 1, color: Colors.white12),
          ),
          width: 265,
          height: 30,
          child: Center(
              child: Text(
            message,
            style: TextStyle(color: primaryColor.withOpacity(0.8)),
          )),
        ),
      ],
    );
  }
}

class ServerBotCard extends StatefulWidget {
  @override
  _ServerBotCardState createState() => _ServerBotCardState();
}

class _ServerBotCardState extends State<ServerBotCard> {
  String message = 'Status: ';

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        ElevatedButton(
          style: ElevatedButton.styleFrom(
              primary: bgColor,
              fixedSize: Size(280, 55),
              side: BorderSide(
                width: 1,
                color: Colors.white12,
              ),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(10),
              )),
          onPressed: () async {
            final response =
                await http.get(Uri.parse('http://127.0.0.1:5000/WhatBot_ec2'));
            print(response);
            final decoded = jsonDecode(response.body) as String;
            setState(() {
              message = 'decoded';
            });
          },
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              CircleAvatar(
                backgroundImage: AssetImage(botsList[0].image),
              ),
              Padding(
                padding: const EdgeInsets.symmetric(horizontal: defaultPadding),
                child: Text(
                  'Launch WhatBot Server',
                  style: TextStyle(color: Colors.white54),
                ),
              ),
              Icon(
                Icons.chevron_right_rounded,
                color: primaryColor,
              )
            ],
          ),
        ),
        Container(
          margin: EdgeInsets.all(10),
          decoration: BoxDecoration(
            color: Colors.transparent,
            borderRadius: BorderRadius.all(Radius.circular(10)),
            border: Border.all(width: 1, color: Colors.white12),
          ),
          width: 265,
          height: 30,
          child: Center(
              child: Text(
            message,
            style: TextStyle(color: primaryColor.withOpacity(0.8)),
          )),
        ),
      ],
    );
  }
}

class WhatBotSCButton extends StatefulWidget {
  final buttonText;
  bool clicked = false;
  WhatBotSCButton({key, this.buttonText}) : super(key: key);

  @override
  _WhatBotSCButtonState createState() => _WhatBotSCButtonState();
}

class _WhatBotSCButtonState extends State<WhatBotSCButton> {
  @override
  Widget build(BuildContext context) {
    return ElevatedButton(
      style: ElevatedButton.styleFrom(
          primary: secondaryColor,
          fixedSize: Size(265, 55),
          side: BorderSide(
            width: 1,
            color: primaryColor,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10),
          )),
      onPressed: () async {},
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Padding(
            padding: const EdgeInsets.symmetric(horizontal: defaultPadding),
            child: Text(
              widget.buttonText,
              style: TextStyle(color: primaryColor.withOpacity(0.8)),
            ),
          ),
          Icon(
            Icons.chevron_right_rounded,
            color: primaryColor,
          )
        ],
      ),
    );
  }
}
